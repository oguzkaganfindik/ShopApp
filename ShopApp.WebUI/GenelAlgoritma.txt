-> Controller Servis Metotlarýný Kullanýr.

-> Servis Metotlarý Repository Metotlarýný Kullanýr.

-> Repository DbContext Metotlarýný Kullanýr.

        // Resim Yükleme Ýle Ýlgili Eski Kodlar
        //public IActionResult Save(ProductFormViewModel formData)
        //{
        //    if(!ModelState.IsValid) 
        //    {
        //        ViewBag.Categories = _categoryService.GetCategories();
        //        return View("Form", formData);
        //    }

        //    var newFileName = "";

        //    if(formData.File is not null) // dosya yüklenmek isteniyorsa
        //    {
        //        var allowedFileTypes = new string[] { "image/jpeg", "image/jpg", "image/jfif", "image/avif" };

        //        var allowedFileExtensions = new string[] { ".jpg", ".jpeg", ".png", ".jfif", ".avif" };

        //        var fileContentType = formData.File.ContentType;
        //        // dosyanýn içeriði

        //        var fileNameWithoutExtension = Path.GetFileNameWithoutExtension(formData.File.FileName);
        //        // dosyanýn uzantýsýz ismi

        //        var fileExtension = Path.GetExtension(formData.File.FileName);
        //        // dosyanýn uzantýsý

        //        if(!allowedFileTypes.Contains(fileContentType) || !allowedFileExtensions.Contains(fileExtension))
        //        {
        //            ViewBag.ImageErrorMessage = "Yüklediðiniz dosya " + fileExtension + " uzantýsýnda. Sisteme yalnýzca .jpg .jpeg .jfif .avif formatýnda dosyalar yüklenebilir.";
        //            ViewBag.Categories = _categoryService.GetCategories();
        //            return View("Form", formData);
        //        }

        //        newFileName = fileNameWithoutExtension + "-" + Guid.NewGuid() + fileExtension;
        //        // Ayný isimde iki tane dosya yüklediðimizde hata almamak için her dosyayý birbiriyle asla eþleþmeyecek þekilde isimlendiriyorum. Guid : unique bir string verir.

        //        // Bu aþamadan sonra görseli yükleyeceðim adresi ayarlýyorum.

        //        var folderPath = Path.Combine("images", "products");
        //        // images/products

        //        var wwwrootFolderPath = Path.Combine(_environment.WebRootPath, folderPath);
        //        // .../wwwroot/images/products

        //        var filePath = Path.Combine(wwwrootFolderPath, newFileName);
        //        // .../wwwroot/images/products/urunGorsel-123123adwaw13daw.jpg

        //        Directory.CreateDirectory(wwwrootFolderPath); // wwwroot/images/products klasörü yoksa oluþtur.

        //        using(var fileStream = new FileStream(filePath, FileMode.Create))
        //        {
        //            formData.File.CopyTo(fileStream);
        //            // asýl dosya kopyalamasýnýn yapýldýðý kýsým.
        //        }
        //        // using içerisinde new'lenen fileStream nesnesi scope boyunca yaþar, scope bitiminde silinir.
        //    }

        //    if(formData.Id == 0) // Ekleme
        //    {
        //        var productAddDto = new ProductAddDto()
        //        {
        //            Name = formData.Name,
        //            Description = formData.Description,
        //            UnitPrice = formData.UnitPrice,
        //            UnitsInStock = formData.UnitsInStock,
        //            CategoryId = formData.CategoryId,
        //            ImagePath = newFileName
        //        };

        //        _productService.AddProduct(productAddDto);
        //        return RedirectToAction("List");

        //    }
        //    else // Güncelleme
        //    {
        //        var productUpdateDto = new ProductUpdateDto()
        //        {
        //            Id = formData.Id,
        //            Name = formData.Name,
        //            Description = formData.Description,
        //            UnitPrice = formData.UnitPrice,
        //            UnitsInStock = formData.UnitsInStock,
        //            CategoryId = formData.CategoryId,
        //            ImagePath = newFileName

        //        };

        //        _productService.UpdateProduct(productUpdateDto);
        //        return RedirectToAction("List");
        //    }
        //}


        
        https://medium.com/software-development-turkey/abstract-class-ve-interface-aras%C4%B1ndaki-farklar-nelerdir-3c0a4f956eba